{"version":3,"sources":["redux/phonebook/phonebook-action.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","reportWebVitals.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["addContact","createAction","name","number","payload","id","shortid","deleteContact","changeFilter","connect","dispatch","onSubmit","phone","useState","setName","setNumber","nameInputId","generate","numInputId","handleInputChange","e","currentTarget","value","reset","preventDefault","htmlFor","type","pattern","title","required","onChange","state","contacts","filter","event","target","normalizeFilter","toLowerCase","contact","includes","getVisibleContacts","onDeleteContact","map","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","action","_","combineReducers","persistConfig","key","storage","rootReducer","phonebookReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.21f40eab.chunk.js","sourcesContent":["import shortid from \"shortid\"\nimport { createAction } from \"@reduxjs/toolkit\"\n\nconst addContact = createAction('contact/add', (name, number) => ({\n    payload: {\n      id: shortid(),\n      name,\n      number, \n    }\n}))\n\nconst deleteContact = createAction('contact/remove')\n\nconst changeFilter = createAction('contact/find');\n\nexport { addContact, deleteContact, changeFilter };","import { connect } from 'react-redux';\nimport './Form.css';\nimport {  useState } from \"react\";\nimport shortid from \"shortid\";\nimport {addContact} from '../../redux/phonebook/phonebook-action'\n\nfunction Form({onSubmit}) {\n\n    const [name, setName] = useState('')\n    const [number, setNumber] = useState('')\n    \n    const nameInputId = shortid.generate();\n    const numInputId = shortid.generate();\n\n    const handleInputChange = (e) => {\n        const { value, name } = e.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value)\n                break\n            case 'number':\n                setNumber(value)\n                break\n            default: return\n        }\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(name,number);\n        reset();\n    }\n    const reset = () => {\n        setNumber('');\n        setName('');\n    }\n    \n    \n        return (\n            <form onSubmit={handleSubmit}>\n          <label htmlFor={nameInputId}>Name</label>\n          <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value= {name}\n          id= {nameInputId}\n          required\n          onChange={handleInputChange}\n          />\n          <br/>\n          <br/>\n          <label htmlFor={numInputId}>Number</label>\n          <input\n            type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          value= {number}\n          id ={numInputId}\n          required\n          onChange={handleInputChange}\n          />\n          <br/>\n          <br/>\n          <button type=\"submit\" >Add contact</button>\n        </form>\n        );\n    \n\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (name, phone) =>dispatch(addContact(name,phone))\n})\n\nexport default connect(null,mapDispatchToProps)(Form);","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {changeFilter} from '../../redux/phonebook/phonebook-action'\n\nconst Filter = ({value, onChange}) => (\n    <label>\n        <br />\n          Find contacts by name <br /><br /> \n          <input type='text' value={value} onChange={onChange}></input>\n    </label>\n);\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    value: state.contacts.filter,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: (event)=> dispatch(changeFilter(event.target.value))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);","import { connect } from 'react-redux';\nimport {deleteContact} from '../../redux/phonebook/phonebook-action'\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n    <ul>\n          {contacts.map(({name,id,number}) =>\n              <li key={id}>{name} {number}\n                  <button type=\"button\" onClick={() => onDeleteContact(id)}>Delete</button>\n              </li>\n            )}\n    </ul>\n)\n\n  const getVisibleContacts = (filter, contacts) => {\n    \n\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  }\n\nconst mapStateToProps = state => {\n    const { filter, contacts } = state.contacts;\n    const visibleContacts = getVisibleContacts(filter, contacts);\n    return {\n\n        contacts: visibleContacts,\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onDeleteContact: (id) => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactList);","import './App.css';\nimport Form from \"./Components/Form\";\nimport Filter from \"./Components/Filter\";\nimport ContactList from \"./Components/ContactList\";\nimport { connect } from \"react-redux\";\n\nfunction App() {\n  return (\n      <div>\n        <h1>Phonebook</h1>\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    )\n  }\nexport default connect()(App)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {addContact, deleteContact, changeFilter} from './phonebook-action';\n\nconst initialContacts = [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n]\n\n\nconst contacts = createReducer(initialContacts, {\n    [addContact]: (state, action) => [...state, action.payload],\n    [deleteContact]: (state, action) => state.filter(({ id }) => id !== action.payload),\n})\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, {payload}) => payload,\n} )\n\n\nexport default combineReducers({\n    contacts,\n    filter,\n});","import phonebookReducer from './phonebook/phonebook-reducer';\nimport { configureStore, combineReducers, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE } from 'redux-persist/es/constants';\n\nconst persistConfig = {\n    key: 'contacts',\n    storage,\n}\n\nconst rootReducer = combineReducers({ contacts: phonebookReducer });\nconst persistedReducer = persistReducer(persistConfig, rootReducer );\n\nconst store = configureStore({\n    reducer: persistedReducer,\n    devTools: process.env.NODE_ENV === 'development',\n    middleware: getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions:[FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n        }\n    })\n})\nconst persistor = persistStore(store);\n\n\nexport  {store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { persistor, store } from './redux/store'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading='loading' persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}